# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2016, The ownCloud developers
# This file is distributed under the same license as the ownCloud 9.2 Server
# Administration Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ownCloud 9.2 Server Administration Manual 9.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-11-23 14:10+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../configuration_files/encryption_configuration.rst:3
msgid "Encryption Configuration"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:5
msgid ""
"The primary purpose of the ownCloud server-side encryption is to protect "
"users' files on remote storage, such as Dropbox and Google Drive, and to "
"do it easily and seamlessly from within ownCloud."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:9
msgid ""
"In ownCloud 9.0 the server-side encryption separates encryption of local "
"and remote storage. This allows you to encrypt remote storage, such as "
"Dropbox and Google, without having to also encrypt your home storage on "
"your ownCloud server."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:14
msgid ""
"Starting with ownCloud 9.0 we support Authenticated Encryption for all "
"newly encrypted files. See https://hackerone.com/reports/108082 for more "
"technical information about the impact."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:18
msgid ""
"For maximum security make sure to configure external storage with \"Check"
" for changes: Never\". This will let ownCloud ignore new files not added "
"via ownCloud, so a malicious external storage administrator could not add"
" new files to the storage without your knowledge. Of course, this is not "
"wise if your external storage is subject to legitimate external changes."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:24
msgid ""
"ownCloud server-side encryption encrypts files stored on the ownCloud "
"server, and files on remote storage that is connected to your ownCloud "
"server. Encryption and decryption are performed on the ownCloud server. "
"All files sent to remote storage will be encrypted by the ownCloud "
"server, and upon retrieval, decrypted before serving them to you and "
"anyone you have shared them with."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:30
msgid ""
"Encrypting files increases their size by roughly 35%, so you must take "
"this into account when you are provisioning storage and setting storage "
"quotas. User's quotas are based on the unencrypted file size, and not the"
" encrypted file size."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:35
msgid ""
"When files on external storage are encrypted in ownCloud, you cannot "
"share them directly from the external storage services, but only through "
"ownCloud sharing because the key to decrypt the data never leaves the "
"ownCloud server."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:39
msgid ""
"ownCloud's server-side encryption generates a strong encryption key, "
"which is unlocked by user's passwords. Your users don't need to track an "
"extra password, but simply log in as they normally do. It encrypts only "
"the contents of files, and not filenames and directory structures."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:44
msgid ""
"You should regularly backup all encryption keys to prevent permanent data"
" loss. The encryption keys are stored in the following directories:"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:47
msgid "``data/<user>/files_encryption``"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:48
msgid ""
"Users' private keys and all other keys necessary to decrypt the users' "
"files"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:51
msgid "``data/files_encryption``"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:50
msgid ""
"private keys and all other keys necessary to decrypt the files stored on "
"a system wide external storage"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:53
msgid ""
"When encryption is enabled, all files are encrypted and decrypted by the "
"ownCloud application, and stored encrypted on your remote storage. This "
"protects your data on externally hosted storage. The ownCloud admin and "
"the storage admin will see only encrypted files when browsing backend "
"storage."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:59
msgid ""
"Encryption keys are stored only on the ownCloud server, eliminating "
"exposure of your data to third-party storage providers. The encryption "
"app does **not** protect your data if your ownCloud server is "
"compromised, and it does not prevent ownCloud administrators from reading"
" user's files. This would require client-side encryption, which this app "
"does not provide. If your ownCloud server is not connected to any "
"external storage services then it is better to use other encryption "
"tools, such as file-level or whole-disk encryption."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:68
msgid ""
"Note also that SSL terminates at or before Apache on the ownCloud server,"
" and all files will exist in an unencrypted state between the SSL "
"connection termination and the ownCloud code that encrypts and decrypts "
"files. This is also potentially exploitable by anyone with administrator "
"access to your server. Read `How ownCloud uses encryption to protect your"
" data <https://owncloud.org/blog/how-owncloud-uses-encryption-to-protect-"
"your- data/>`_ for more information."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:77
msgid "Before Enabling Encryption"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:79
msgid ""
"Plan very carefully before enabling encryption because it is not "
"reversible via the ownCloud Web interface. If you lose your encryption "
"keys your files are not recoverable. Always have backups of your "
"encryption keys stored in a safe location, and consider enabling all "
"recovery options."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:84
msgid ""
"You have more options via the ``occ`` command (see "
":ref:`occ_encryption_label`)"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:89
msgid "Enabling Encryption"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:91
msgid ""
"ownCloud encryption consists of two parts. The base encryption system is "
"enabled and disabled on your Admin page. First you must enable this, and "
"then select an encryption module to load. Currently the only available "
"encryption module is the ownCloud Default Encryption Module."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:96
msgid ""
"First go to the **Server-side encryption** section of your Admin page and"
" check **Enable server-side encryption**. You have one last chance to "
"change your mind."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:101
msgid ""
"After clicking the **Enable Encryption** button you see the message \"No "
"encryption module loaded, please load a encryption module in the app "
"menu\", so go to your Apps page to enable the ownCloud Default Encryption"
" Module."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:107
msgid ""
"Return to your Admin page to see the ownCloud Default Encryption Module "
"added to the module selector, and automatically selected. Now you must "
"log out and then log back in to initialize your encryption keys."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:113
msgid ""
"When you log back in, there is a checkbox for enabling encryption on your"
" home storage. This is checked by default. Un-check to avoid encrypting "
"your home storage."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:120
msgid "Sharing Encrypted Files"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:122
msgid ""
"After encryption is enabled your users must also log out and log back in "
"to generate their personal encryption keys. They will see a yellow "
"warning banner that says \"Encryption App is enabled but your keys are "
"not initialized, please log-out and log-in again.\""
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:127
msgid ""
"Share owners may need to re-share files after encryption is enabled; "
"users trying to access the share will see a message advising them to ask "
"the share owner to re-share the file with them. For individual shares, "
"un-share and re-share the file. For group shares, share with any "
"individuals who can't access the share. This updates the encryption, and "
"then the share owner can remove the individual shares."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:137
msgid "Encrypting External Mountpoints"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:139
msgid ""
"You and your users can encrypt individual external mountpoints. You must "
"have external storage enabled on your Admin page, and enabled for your "
"users."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:142
msgid ""
"Encryption settings can be configured in the mount options for an "
"external storage mount, see :ref:`external_storage_mount_options_label` "
"(:doc:`external_storage_configuration_gui`)"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:147
msgid "Enabling Users File Recovery Keys"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:149
msgid ""
"If you lose your ownCloud password, then you lose access to your "
"encrypted files. If one of your users loses their ownCloud password their"
" files are unrecoverable. You cannot reset their password in the normal "
"way; you'll see a yellow banner warning \"Please provide an admin "
"recovery password, otherwise all user data will be lost\"."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:155
msgid ""
"To avoid all this, create a Recovery Key. Go to the Encryption section of"
" your Admin page and set a recovery key password."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:160
msgid ""
"Then your users have the option of enabling password recovery on their "
"Personal pages. If they do not do this, then the Recovery Key won't work "
"for them."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:165
msgid ""
"For users who have enabled password recovery, give them a new password "
"and recover access to their encrypted files by supplying the Recovery Key"
" on the Users page."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:171
msgid "You may change your Recovery Key password."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:178
msgid "occ Encryption Commands"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:180
msgid ""
"If you have shell access you may use the ``occ`` command to perform "
"encryption operations, and you have additional options such as decryption"
" and creating a single master encryption key. See :ref:`encryption_label`"
"  for detailed instructions on using ``occ``."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:185
msgid "Get the current status of encryption and the loaded encryption module::"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:191
msgid ""
"This is equivalent to checking **Enable server-side encryption** on your "
"Admin page::"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:199
msgid "List the available encryption modules::"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:204
msgid ""
"Select a different default Encryption module (currently the only "
"available module is OC_DEFAULT_MODULE)::"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:209
msgid "The [module ID] is taken from the ``encryption:list-modules`` command."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:211
msgid ""
"Encrypt all data files for all users. For performance reasons, when you "
"enable encryption on an ownCloud server only new and changed files are "
"encrypted. This command gives you the option to encrypt all files. You "
"must first put your ownCloud server into single-user mode to prevent any "
"user activity until encryption is completed::"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:220
msgid "Then run ``occ``::"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:231
msgid ""
"When you type ``y`` it creates a key pair for each of your users, and "
"then encrypts their files, displaying progress until all user files are "
"encrypted."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:234
msgid "Decrypt all user data files, or optionally a single user::"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:238
msgid "View current location of keys::"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:243
msgid ""
"Move keys to a different root folder, either locally or on a different "
"server. The folder must already exist, be owned by root and your HTTP "
"group, and be restricted to root and your HTTP group. This example is for"
" Ubuntu Linux. Note that the new folder is relative to your ``occ`` "
"directory::"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:256
msgid ""
"Create a new master key. Use this when you have a single-sign on "
"infrastructure.  Use this only on fresh installations with no existing "
"data, or on systems where encryption has not already been enabled. It is "
"not possible to disable it::"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:264
msgid "Disabling Encryption"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:266
msgid ""
"You may disable encryption only with ``occ``. Make sure you have backups "
"of all encryption keys, including users'. Put your ownCloud server into "
"single-user mode, and then disable your encryption module with this "
"command::"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:273
msgid "Take it out of single-user mode when you are finished::"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:278
msgid "Files Not Encrypted"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:280
msgid ""
"Only the data in the files in ``data/user/files`` are encrypted, and not "
"the filenames or folder structures. These files are never encrypted:"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:283
msgid ""
"Existing files in the trash bin & Versions. Only new and changed files "
"after encryption is enabled are encrypted."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:285
msgid "Existing files in Versions"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:286
msgid "Image thumbnails from the Gallery app"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:287
msgid "Previews from the Files app"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:288
msgid "The search index from the full text search app"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:289
msgid "Third-party app data"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:291
msgid ""
"There may be other files that are not encrypted; only files that are "
"exposed to third-party storage providers are guaranteed to be encrypted."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:295
msgid "LDAP and Other External User Back-ends"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:297
msgid ""
"If you use an external user back-end, such as an LDAP or Samba server, "
"and you change a user's password on the back-end, the user will be "
"prompted to change their ownCloud login to match on their next ownCloud "
"login. The user will need both their old and new passwords to do this. If"
" you have enabled the Recovery Key then you can change a user's password "
"in the ownCloud Users panel to match their back-end password, and then, "
"of course, notify the user and give them their new password."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:308
msgid "Encryption migration to ownCloud 8.0"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:310
msgid ""
"When you upgrade from older versions of ownCloud to ownCloud 8.0, you "
"must manually migrate your encryption keys with the *occ* command after "
"the upgrade is complete, like this example for CentOS: *sudo -u apache "
"php occ encryption:migrate-keys* You must run *occ* as your HTTP user. "
"See :doc:`../configuration_server/occ_command` to learn more about *occ*."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:316
msgid "Encryption migration to ownCloud 8.1"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:318
msgid ""
"The encryption backend has changed in ownCloud 8.1 again, so you must "
"take some additional steps to migrate encryption correctly. If you do not"
" follow these steps you may not be able to access your files."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:322
msgid ""
"Before you start your upgrade, put your ownCloud server into "
"``maintenance:singleuser`` mode (See "
":doc:`../maintenance/enable_maintenance`.) You must do this to prevent "
"users and sync clients from accessing files before you have completed "
"your encryption migration."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:327
msgid ""
"After your upgrade is complete, follow the steps in "
":ref:`enable_encryption_label` to enable the new encryption system. Then "
"click the **Start Migration** button on your Admin page to migrate your "
"encryption keys, or use the ``occ`` command. We strongly recommend using "
"the ``occ`` command; the **Start Migration** button is for admins who do "
"not have access to the console, for example installations on shared "
"hosting. This example is for Debian/Ubuntu Linux::"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:337
msgid "This example is for Red Hat/CentOS/Fedora Linux::"
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:341
msgid ""
"You must run ``occ`` as your HTTP user; see "
":doc:`../configuration_server/occ_command`."
msgstr ""

#: ../../configuration_files/encryption_configuration.rst:344
msgid ""
"When you are finished, take your ownCloud server out of "
"``maintenance:singleuser`` mode."
msgstr ""

